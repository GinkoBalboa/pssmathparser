################################################################################
# Input file for testing of mathparser library
#  - Binary test1 runs this file.
#  - This input is for testing transformation from infix to Reverse Polish.
#  - First line is input and second line is output.
#############################################################################001
1
1
#############################################################################002
2.0
2.0
#############################################################################003
1+ 21
1 21 +
#############################################################################004
a+1.1
a 1.1 +
#############################################################################005
2.2*a+1.1
2.2 a * 1.1 +
#############################################################################006
(2.2*a+1.1)*3.3
2.2 a * 1.1 + 3.3 *
#############################################################################007
( 2.2   * a +1.1) *   3.3
2.2 a * 1.1 + 3.3 *
#############################################################################008
(2.2e-3*a+1.1)*(-3.3)
2.2e-3 a * 1.1 + -3.3 *
#############################################################################009
sin(2.2 * a) + cos(pi / b)
2.2 a * sin pi b / cos +
#############################################################################010
1 - sin(2.2 * a) + cos(pi / b)
1 2.2 a * sin - pi b / cos +
####### Here is something that begins with a sign. RP adds a leading zero ###011
- sin(2.2 * a)
0 2.2 a * sin -
#############################################################################012
sqrt(1 - sin(2.2 * a) + cos(pi / b) / 3.3)
1 2.2 a * sin - pi b / cos 3.3 / + sqrt
#############################################################################013
(a^2 / sin(2 * pi / b)) -a / 2.2
a 2 ^ 2 pi * b / sin / a 2.2 / -
#############################################################################014
+a^(-b)
0 a 0 b - ^ +
#############################################################################015
+a^-b
0 a 0 b - ^ +
############################### Little trickery with operator preceedence ###016
-2^2
0 2 2 ^ -
#############################################################################017
(-2)^2
-2 2 ^
#############################################################################018
((x+y-z/w))
x y + z w / -
########################################################## Doubling signs ###019
+a--b
0 a + b +
#############################################################################020
+a---b
0 a + b -
#############################################################################021
+a-+-b
0 a + b +
#############################################################################022
(-(a))-(-(b))
0 a - 0 b - -
#############################################################################023
3.3-((+a)*(-b))
3.3 0 a + 0 b - * -
#############################################################################024
-(-b^2^3)+b^6
0 0 b 2 3 ^ ^ - - b 6 ^ +
#############################################################################025
((x-((y-7.123)/w))/((x/y)-(7.123/w)))
x y 7.123 - w / - x y / 7.123 w / - /
#############################################################################026
((((((((e+pi)-2.53)+a)+pi)+b)*1.84)+pi)+a)
e pi + 2.53 - a + pi + b + 1.84 * pi + a +
############################################## Little scientific notation ###027
-(-b^2.3^3e-6)+b^.045e+2
0 0 b 2.3 3e-6 ^ ^ - - b .045e+2 ^ +
#############################################################################028
.3e-5*sin((((tan(sin(((pi/e)+pi)))-2.94)+e)+pi))
.3e-5 pi e / pi + sin tan 2.94 - e + pi + sin *
